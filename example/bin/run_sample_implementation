#!/usr/bin/php

<?php
include_once dirname(dirname(__DIR__)) . '/src/PHPUnitDistributed/phpunitdistributed_common.php';

use PHPUnitDistributed\Util\Witness;
use PHPUnitDistributed\Util\Shell;
use PHPUnitDistributed\PHPUnit\Configuration;
use PHPUnitDistributed\PHPUnit\RunDistributedMaster;
use PHPUnitDistributed\PHPUnit\SerialRun;
use PHPUnitDistributed\PHPUnit\Run;
use PHPUnitDistributed\TestDivisionStrategy\TestCount;

$app_dir = '/box/www/devtools_local/';
/*
$slaves = array(
    'pod4101-automation425.pod.box.net',
    'pod4101-automation426.pod.box.net',
    'pod4101-automation427.pod.box.net',
    'pod4101-automation428.pod.box.net',
    'pod4101-automation429.pod.box.net',
    'pod4101-automation430.pod.box.net',
    'pod4101-automation431.pod.box.net',
    'pod4101-automation432.pod.box.net',
    'pod4101-automation433.pod.box.net',
    'pod4101-automation434.pod.box.net',
    'pod4101-automation435.pod.box.net',
    'pod4101-automation436.pod.box.net',
    'pod4101-automation437.pod.box.net',
    'pod4101-automation438.pod.box.net',
    'pod4101-automation439.pod.box.net',
    'pod4101-automation440.pod.box.net',
);

// Update all slaves' application code
$shell = new Shell();

foreach ($slaves as $slave)
{
	$shell->command("ssh $slave 'cd /box/www/current && git fetch scm && git reset --hard scm/v5-dev'");
}
*/
// Run PHPUnit through the cluster!
$config = new Configuration(
    array(
        'app_directory' => $app_dir,
        'junit_result_output_path' => '/box/www/result.xml',
		'test_directories' => array($app_dir . 'test'),
        'bootstrap_file' => $app_dir . 'test/setup.php',
        'verbose' => false,
    ),
    new Witness()
);

//$runner = new RunDistributedMaster($config, $slaves, new TestCount(), new Witness(), true);
$runner = new Run($config, new Shell(), new Witness());
$runner->run();